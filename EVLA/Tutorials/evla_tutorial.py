Date: 25 July 2024

In this document, I am following the tutorial with the link below:
 https://casaguides.nrao.edu/index.php?title=VLA_Continuum_Tutorial_3C391-CASA6.4.1

In this tutorial, they describe the calibration and imaging of a multiple-point 
continuum data set of the supernova remnant 3C 391. The data were taking in 
early science shared-risk observing mode, with 128 MHz of bandwidth in 
each of the two widely spaced spectral windows, centred at 4.6 and 7.5 Ghz

Link for observer log
 https://www.vla.nrao.edu/cgi-bin/oplogs.cgi

 '''
 Info: 
 -> J1331+3030 = 3C286 - calibrator for visibility amplitudes, spectral bandpass calibrator
 -> J1822-0938 - calibrator for visibility phases
 -> J0319+4130 = 3C 84, polarization calibrator
 -> 3C391 C11--C7: 7 fields centred on and surrounding the supernova remnant
 '''

obs_dict = listobs(vis='3c391_ctm_mosaic_10s_spw0.ms', listfile='3c391.listobs.txt')

plotants(vis='3c391_ctm_mosaic_10s_spw0.ms',figfile='plotants_3c391_antenna_layout.png')
clearstat() # This removes the table lock generated by plotants in script mode

# Reference Antenna: ea21

# Examining and editing the data
flagdata(vis='3c391_ctm_mosaic_10s_spw0.ms', flagbackup=True, mode='manual', scan='1')

flagdata(vis='3c391_ctm_mosaic_10s_spw0.ms', flagbackup=True, mode='manual', antenna='ea13,ea15')

flagdata(vis='3c391_ctm_mosaic_10s_spw0.ms', flagbackup=True, mode='manual', antenna='ea13,ea15')

# Quack Flagging: standard practice to flag the inital samples from the start of each scan to account for the time to settle down
# mode='quack': removes the data from all baselines, from all scans 
# quackinterval: n seconds to quack
# quackmode='beg'
flagdata(vis='3c391_ctm_mosaic_10s_spw0.ms', mode='quack', quackinterval=10.0, quackmode='beg')

clearstat() # This removes any existing table locks generated by flagdata
plotms(vis='3c391_ctm_mosaic_10s_spw0.ms', selectdata=True, correlation='RR,LL', averagedata=True, avgchannel='64', coloraxis='field')

plotms(vis='3c391_ctm_mosaic_10s_spw0.ms',field='',correlation='RR,LL',
       timerange='',antenna='ea01',spw='0:31',
       xaxis='time',yaxis='antenna2',
       plotrange=[-1,-1,0,26],coloraxis='field')

# Calibrating the data

## Antenna Position Corrections

gencal(vis='3c391_ctm_mosaic_10s_spw0.ms',caltable='3c391_ctm_mosaic_10s_spw0.antpos',caltype='antpos')

## Initial Flux Density Scaling
setjy(vis='3c391_ctm_mosaic_10s_spw0.ms', listmodels=True)

setjy(vis='3c391_ctm_mosaic_10s_spw0.ms',field='J1331+3030',standard='Perley-Butler 2017',
      model='3C286_C.im',usescratch=True,scalebychan=True,spw='')
# done till here 

## Initial Phase Calibration
gaincal(vis='3c391_ctm_mosaic_10s_spw0.ms', caltable='3c391_ctm_mosaic_10s_spw0.G0all', 
        field='0,1,9', refant='ea21', spw='0:27~36',
        gaintype='G',calmode='p', solint='int', 
        minsnr=5, gaintable=['3c391_ctm_mosaic_10s_spw0.antpos'])

plotms(vis='3c391_ctm_mosaic_10s_spw0.G0all',xaxis='time',yaxis='phase',
        coloraxis='corr',iteraxis='antenna',plotrange=[-1,-1,-180,180])

flagdata(vis='3c391_ctm_mosaic_10s_spw0.ms',
         flagbackup=True, mode='manual', antenna='ea05')

gaincal(vis='3c391_ctm_mosaic_10s_spw0.ms', caltable='3c391_ctm_mosaic_10s_spw0.G0', 
        field='J1331+3030', refant='ea21', spw='0:27~36', calmode='p', solint='int', 
        minsnr=5, gaintable=['3c391_ctm_mosaic_10s_spw0.antpos'])

plotms(vis='3c391_ctm_mosaic_10s_spw0.G0',
        xaxis='time',yaxis='phase',coloraxis='corr',field='J1331+3030',iteraxis='antenna',
        plotrange=[-1,-1,-180,180],timerange='08:02:00~08:17:00')

## Delay Calibration

gaincal(vis='3c391_ctm_mosaic_10s_spw0.ms',caltable='3c391_ctm_mosaic_10s_spw0.K0', 
        field='J1331+3030',refant='ea21',spw='0:5~58',gaintype='K', 
        solint='inf',combine='scan',minsnr=5,
        gaintable=['3c391_ctm_mosaic_10s_spw0.antpos',
                   '3c391_ctm_mosaic_10s_spw0.G0'])

plotms(vis='3c391_ctm_mosaic_10s_spw0.K0',xaxis='antenna1',yaxis='delay',coloraxis='baseline')

# reproducing figure 7 but failed to do so
plotms(vis='3c391_ctm_mosaic_10s_spw0.K0', xaxis='channel', yaxis='amp', correlation='RR, LL', field='J1331+3030', coloraxis='spw')

## Bandpass Calibration
bandpass(vis='3c391_ctm_mosaic_10s_spw0.ms',caltable='3c391_ctm_mosaic_10s_spw0.B0',
         field='J1331+3030',spw='',refant='ea21',combine='scan', 
         solint='inf',bandtype='B',
         gaintable=['3c391_ctm_mosaic_10s_spw0.antpos',
                    '3c391_ctm_mosaic_10s_spw0.G0',
                    '3c391_ctm_mosaic_10s_spw0.K0'])

plotms(vis='3c391_ctm_mosaic_10s_spw0.B0',field='J1331+3030', 
        xaxis='chan',yaxis='amp',coloraxis='corr',
        iteraxis='antenna',gridrows=2,gridcols=2)

plotms(vis='3c391_ctm_mosaic_10s_spw0.B0',field='J1331+3030', 
        xaxis='chan',yaxis='phase',coloraxis='corr',plotrange=[-1,-1,-180,180], 
        iteraxis='antenna',gridrows=2,gridcols=2)

## Gain Calibration
gaincal(vis='3c391_ctm_mosaic_10s_spw0.ms',caltable='3c391_ctm_mosaic_10s_spw0.G1',
        field='J1331+3030',spw='0:5~58',
        solint='inf',refant='ea21',gaintype='G',calmode='ap',solnorm=False,
        gaintable=['3c391_ctm_mosaic_10s_spw0.antpos',
                   '3c391_ctm_mosaic_10s_spw0.K0',
                   '3c391_ctm_mosaic_10s_spw0.B0'],
        interp=['','','nearest'])

gaincal(vis='3c391_ctm_mosaic_10s_spw0.ms',caltable='3c391_ctm_mosaic_10s_spw0.G1',
        field='J1822-0938',
        spw='0:5~58',solint='inf',refant='ea21',gaintype='G',calmode='ap',
        gaintable=['3c391_ctm_mosaic_10s_spw0.antpos',
                   '3c391_ctm_mosaic_10s_spw0.K0',
                   '3c391_ctm_mosaic_10s_spw0.B0'],
        append=True)

plotms(vis='3c391_ctm_mosaic_10s_spw0.G1',xaxis='time',yaxis='phase',
       gridrows=1,gridcols=2,iteraxis='corr',coloraxis='baseline',
       plotrange=[-1,-1,-180,180],plotfile='plotms_3c391-G1-phase.png')
plotms(vis='3c391_ctm_mosaic_10s_spw0.G1',xaxis='time',yaxis='amp',
       gridrows=1,gridcols=2,iteraxis='corr',coloraxis='baseline',
       plotfile='plotms_3c391-G1-amp.png')

# to check if our chosen reference antenna has good phase stability
plotms(vis='3c391_ctm_mosaic_10s_spw0.G1', xaxis='time', yaxis='phase',
        correlation='/', coloraxis='baseline', plotrange=[-1,-1,-180,180])


## Scaling Amplitude Gains
myscale = fluxscale(vis='3c391_ctm_mosaic_10s_spw0.ms',
                    caltable='3c391_ctm_mosaic_10s_spw0.G1', 
                    fluxtable='3c391_ctm_mosaic_10s_spw0.fluxscale1', 
                    reference='J1331+3030',
                    transfer=['J1822-0938'],
                    incremental=False)

# to plot the rescaled amplitudes
plotms(vis='3c391_ctm_mosaic_10s_spw0.fluxscale1',xaxis='time',yaxis='amp',
       correlation='R',coloraxis='baseline')
plotms(vis='3c391_ctm_mosaic_10s_spw0.fluxscale1',xaxis='time',yaxis='amp',
       correlation='L',coloraxis='baseline')

# Applying the Calibrations
applycal(vis='3c391_ctm_mosaic_10s_spw0.ms',
         field='J1331+3030',
         gaintable=['3c391_ctm_mosaic_10s_spw0.antpos', 
                    '3c391_ctm_mosaic_10s_spw0.fluxscale1',
                    '3c391_ctm_mosaic_10s_spw0.K0',
                    '3c391_ctm_mosaic_10s_spw0.B0'],
         gainfield=['','J1331+3030','',''], 
         interp=['','nearest','',''],
         calwt=False)

applycal(vis='3c391_ctm_mosaic_10s_spw0.ms',
         field='J1822-0938',
         gaintable=['3c391_ctm_mosaic_10s_spw0.antpos', 
                    '3c391_ctm_mosaic_10s_spw0.fluxscale1',
                    '3c391_ctm_mosaic_10s_spw0.K0',
                    '3c391_ctm_mosaic_10s_spw0.B0'],
         gainfield=['','J1822-0938','',''], 
         interp=['','nearest','',''],
         calwt=False)

# Applying the calibrations to target fields in the mosaic, linearly interpolating 
# the gain solutions frm the secondary calibrator, J1822-0938
applycal(vis='3c391_ctm_mosaic_10s_spw0.ms',
         field='2~8',
         gaintable=['3c391_ctm_mosaic_10s_spw0.antpos', 
                    '3c391_ctm_mosaic_10s_spw0.fluxscale1',
                    '3c391_ctm_mosaic_10s_spw0.K0',
                    '3c391_ctm_mosaic_10s_spw0.B0'],
         gainfield=['','J1822-0938','',''], 
         interp=['','linear','',''],
         calwt=False)

# We have fully calibrated visibilities in the CORRECTED_DATA column of the ms.
# Now, we inspect them to ensure that the calibration did what we expected to do. 
plotms(vis='3c391_ctm_mosaic_10s_spw0.ms',field='0',correlation='RR,LL',
       antenna='',avgtime='60',xaxis='channel',yaxis='amp',
       ydatacolumn='corrected',coloraxis='corr',
       plotfile='plotms_3c391-fld0-corrected-amp.png')

plotms(vis='3c391_ctm_mosaic_10s_spw0.ms',field='0',correlation='RR,LL',
       antenna='',avgtime='60',xaxis='channel',yaxis='phase',
       ydatacolumn='corrected',coloraxis='corr',
       plotrange=[-1,-1,-180,180],
       plotfile='plotms_3c391-fld0-corrected-phase.png')

plotms(vis='3c391_ctm_mosaic_10s_spw0.ms',field='1',correlation='RR,LL',
       antenna='',avgtime='60',xaxis='channel',yaxis='amp',
       ydatacolumn='corrected',coloraxis='corr',
       plotfile='plotms_3c391-fld1-corrected-amp.png')

plotms(vis='3c391_ctm_mosaic_10s_spw0.ms',field='1',correlation='RR,LL',
       antenna='',avgtime='60',xaxis='channel',yaxis='phase',
       ydatacolumn='corrected',coloraxis='corr',
       plotrange=[-1,-1,-180,180],
       plotfile='plotms_3c391-fld1-corrected-phase.png')

# Splitting the Science targets
split(vis='3c391_ctm_mosaic_10s_spw0.ms',outputvis='3c391_ctm_mosaic_spw0.ms',
      datacolumn='corrected',field='2~8',correlation='RR,LL')

# Prior to imaging, we run `statwt` task to correct the data weights (weight and sigma columns)
# It will remove the effects of relative noise scatter that may have been introduced from flagging unever bits in 
# the data between the channels and time
statwt(vis='3c391_ctm_mosaic_spw0.ms',datacolumn='data')

# Imaging
plotms(vis='3c391_ctm_mosaic_spw0.ms',xaxis='uvwave',yaxis='amp',
       ydatacolumn='data', field='0',avgtime='30',correlation='RR',
       plotfile='plotms_3c391-mosaic0-uvwave.png',overwrite=True)

## Multi-scale Mosaic Clean
tclean(vis='3c391_ctm_mosaic_spw0.ms',imagename='3c391_ctm_spw0_multiscale',
      field='',spw='',
      specmode='mfs',
      niter=20000,
      gain=0.1, threshold='1.0mJy',
      gridder='mosaic',
      deconvolver='multiscale',
      scales=[0, 5, 15, 45], smallscalebias=0.9,
      interactive=True,
      imsize=[480,480], cell=['2.5arcsec','2.5arcsec'],
      stokes='I',
      weighting='briggs',robust=0.5,
      pbcor=False,
      savemodel='modelcolumn')

!carta --no_browser

impbcor(imagename='3c391_ctm_spw0_multiscale.image',pbimage='3c391_ctm_spw0_multiscale.pb',
        outfile='3c391_ctm_spw0_multiscale.pbcorimage')

# open the above in carta

# Image Analysis
mystat = imstat(imagename='3c391_ctm_spw0_multiscale.pbcorimage', logfile='3c391_ctm_spw0_multiscale.pbcorimage_imstat.txt')

# Use carta to display the corrected image: 3c391_ctm_spw0_multiscale.pbcorimage
!carta --no_browser

# to find the rms noise level, we load the original (un-pbcor) image
!carta --no_browser

# Self Calibration

# To get rid of the previous model 
delmod('3c391_ctm_mosaic_spw0.ms') 
tclean(vis='3c391_ctm_mosaic_spw0.ms',imagename='3c391_ctm_spw0_ms_I',
      field='',spw='',
      specmode='mfs',
      niter=500,
      gain=0.1,threshold='1mJy',
      gridder='mosaic',
      deconvolver='multiscale',
      scales=[0, 5, 15, 45],smallscalebias=0.9,
      interactive=True,
      imsize=[480,480],cell=['2.5arcsec','2.5arcsec'],
      stokes='I',
      weighting='briggs',robust=0.5,
      pbcor=False,
      savemodel='modelcolumn')

gaincal(vis='3c391_ctm_mosaic_spw0.ms',caltable='3c391_ctm_mosaic_spw0.selfcal1',
        field='',spw='',selectdata=False,
        solint='30s',refant='ea21',minblperant=4,minsnr=3,
        gaintype='G',calmode='p')

applycal(vis='3c391_ctm_mosaic_spw0.ms',
         field='',spw='',selectdata=False,
         gaintable= ['3c391_ctm_mosaic_spw0.selfcal1'],gainfield=[''],interp=['nearest'],
         calwt=[False],applymode='calflag')

tclean(vis='3c391_ctm_mosaic_spw0.ms',imagename='3c391_ctm_spw0_multiscale_selfcal1',
      field='',spw='',
      specmode='mfs',
      niter=20000,
      gain=0.1,threshold='1mJy',
      gridder='mosaic',
      deconvolver='multiscale',
      scales=[0, 5, 15, 45],smallscalebias=0.9,
      interactive=True,
      imsize=[480,480],cell=['2.5arcsec','2.5arcsec'],
      stokes='I',
      weighting='briggs',robust=0.5,
      pbcor=False,
      savemodel='modelcolumn')











